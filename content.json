{"meta":{"title":"唐略略的博客","subtitle":"","description":"","author":"唐略略","url":"https://lifefollower.github.io","root":"/"},"pages":[{"title":"关于我","date":"2022-06-04T23:20:38.000Z","updated":"2022-06-04T23:45:33.855Z","comments":true,"path":"about/index.html","permalink":"https://lifefollower.github.io/about/index.html","excerpt":"","text":"这是我的QQ 2602627292 欢迎来找我唠嗑瞎侃&#x1F606"},{"title":"标签","date":"2022-06-04T21:42:56.000Z","updated":"2022-06-04T23:26:02.600Z","comments":true,"path":"tags/index.html","permalink":"https://lifefollower.github.io/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2022-06-04T21:46:32.000Z","updated":"2022-06-04T23:25:54.387Z","comments":true,"path":"categories/index.html","permalink":"https://lifefollower.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"lalalal","slug":"2022-05-24","date":"2022-05-19T16:00:00.000Z","updated":"2022-06-05T10:47:39.127Z","comments":true,"path":"2022/05/20/2022-05-24/","link":"","permalink":"https://lifefollower.github.io/2022/05/20/2022-05-24/","excerpt":"","text":"hahahhaha","categories":[{"name":"随笔","slug":"随笔","permalink":"https://lifefollower.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://lifefollower.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"随笔","slug":"随笔","permalink":"https://lifefollower.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"Vue监视数据的原理","slug":"2022-05-15","date":"2022-05-14T16:00:00.000Z","updated":"2022-06-05T08:49:50.231Z","comments":true,"path":"2022/05/15/2022-05-15/","link":"","permalink":"https://lifefollower.github.io/2022/05/15/2022-05-15/","excerpt":"","text":"Vue会监视data中所有层次的数据如何监测对象中的数据?通过setter实现监视，且要在new Vue时就传入要监测的数据 对象中追加的属性，Vue默认不做响应式处理 如需给后添加的属性做响应式，请使用如下API： Vue.set(target,propertyName&#x2F;index,value) vm.$set(target,propertyName&#x2F;index,value) 如何监测数组中的数据通过包裹数据更新元素的方法实现，本质就是做了两件事： 调用原生对应的方法对数组进行更新 重新解析模板，进而更新页面 在Vue中修改数组中的某个元素一定要用如下方法： push()、pop()、shift()、unshift()、splice()、sort()、reverse() Vue.set()、vm.$set() (备注：这两个不能给vm或vm的根数据对象添加属性)","categories":[{"name":"前端","slug":"前端","permalink":"https://lifefollower.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://lifefollower.github.io/tags/Vue/"},{"name":"前端","slug":"前端","permalink":"https://lifefollower.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"Vue的生命周期","slug":"2022-05-10","date":"2022-05-09T16:00:00.000Z","updated":"2022-06-05T00:23:50.087Z","comments":true,"path":"2022/05/10/2022-05-10/","link":"","permalink":"https://lifefollower.github.io/2022/05/10/2022-05-10/","excerpt":"","text":"总结 别名：生命周期回调函数、生命周期函数、生命周期钩子 是什么：Vue在关键时刻调用的一些特殊名称的函数 生命周期函数名称不可更改，但函数具体内容可以根据需求编些 生命周期函数中的this指向是vm或组件实例对象 常用的生命周期钩子 mounted：发送Ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】 beforeDestroy：清楚定时器、解绑自定义事件、取消订阅消息等【收尾工作】 关于销毁Vue实例 销毁后借助Vue开发者工具看不到任何信息 销毁后自定义事件会失效，但原生DOM事件依然有效 一般不会在beforeDestroy操作数据，因为即便操作数据，也不会再触发更新流程 图示","categories":[{"name":"前端","slug":"前端","permalink":"https://lifefollower.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://lifefollower.github.io/tags/Vue/"},{"name":"前端","slug":"前端","permalink":"https://lifefollower.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"这是我的第一篇博客","slug":"2022-05-04","date":"2022-05-03T16:00:00.000Z","updated":"2022-06-05T00:27:06.799Z","comments":true,"path":"2022/05/04/2022-05-04/","link":"","permalink":"https://lifefollower.github.io/2022/05/04/2022-05-04/","excerpt":"","text":"欢迎访问我的个人网站,这是一个基于Github Page和hexo搭建的网站,使用的是next主题,个人不是很满意其中的一些设计,在接下来的时间里会对该主题进行魔改,当然,原则上要遵循简约,简约以及简约. 今后我会发些关于计算机、个人常玩游戏以及随思随想的博客,更新时间不定(尽量不犯懒….). 我要给自己定个小目标,在接下来的半年里发够100篇文章,为了完成它,内容还会包括把以前的纸质笔记打一遍再发一次,发个”今天天气真好”水个文等等,所以理论上这个小目标还是很容易完成的.","categories":[{"name":"随笔","slug":"随笔","permalink":"https://lifefollower.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://lifefollower.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"随笔","slug":"随笔","permalink":"https://lifefollower.github.io/tags/%E9%9A%8F%E7%AC%94/"}]}],"categories":[{"name":"随笔","slug":"随笔","permalink":"https://lifefollower.github.io/categories/%E9%9A%8F%E7%AC%94/"},{"name":"前端","slug":"前端","permalink":"https://lifefollower.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://lifefollower.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"随笔","slug":"随笔","permalink":"https://lifefollower.github.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"Vue","slug":"Vue","permalink":"https://lifefollower.github.io/tags/Vue/"},{"name":"前端","slug":"前端","permalink":"https://lifefollower.github.io/tags/%E5%89%8D%E7%AB%AF/"}]}